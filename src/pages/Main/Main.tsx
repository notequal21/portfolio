import { Swiper, SwiperSlide } from 'swiper/react'
import { Autoplay, Navigation, Pagination } from 'swiper'
import s from './Main.module.scss'
import './Slider.scss'
import 'swiper/css'
import 'swiper/css/navigation'
import 'swiper/css/pagination'
import { PortfolioItem } from '../Portfolio/Portfolio'
import { useCallback, useEffect, useRef, useState } from 'react'
import { useSelector } from 'react-redux'
import StatsComponent from '../../components/Stats/Stats'
import LiquidButton from './JellyButton'
import { useNavigate } from 'react-router-dom'

const Main = () => {
  const handleMargin = () => {
    const mainBlock = document.querySelector(`.${s.main}`)
    let parallaxCont: any = document.querySelector(`.${s.parallaxCont}`)

    parallaxCont.style.margin = `${mainBlock?.clientHeight}px 0 0`
  }

  useEffect(() => {
    handleMargin()
    window.addEventListener('resize', handleMargin)
  }, [])

  return (
    <>
      <MainContent />

      <div className={s.parallaxCont}>
        <About />
        <Advantages />
        <div className={s.contentGradient}>
          <PreviewProjects />
          <Reviews />
        </div>
        <MyStack />
      </div>
      {/* <AboutMe /> */}
    </>
  )
}

const MainContent = () => {
  // Slider for main screen
  // const projectsListStateFiltered = useSelector((state: any) =>
  //   state.projects.filter((item: any) => item.IsBest)
  // )
  // const projectsListSlider = projectsListStateFiltered.map(
  //   (item: any, index: number) => (
  //     <SwiperSlide key={index}>
  //       <PortfolioItem
  //         isSlider
  //         name={item.Name}
  //         img={item.Img}
  //         link={item.Link}
  //         isBest={item.IsBest}
  //         type={item.Type}
  //       />
  //     </SwiperSlide>
  //   )
  // )

  return (
    <>
      <div className={s.main}>
        <div className='container small'>
          <div className={s.mainBody}>
            <div className={s.mainBody__hello}>–ü—Ä–∏–≤–µ—Ç!</div>
            <div className={s.mainBody__description}>
              –ú–µ–Ω—è –∑–æ–≤—É—Ç –ö–∏—Ä–∏–ª–ª, <br />–Ø Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã
              –±–æ–ª–µ–µ 3—Ö –ª–µ—Ç.
            </div>
            <ul className={s.mainBody__list}>
              <li className={s.mainBody__listItem}>–í—Å–µ–≥–¥–∞ –∏ –≤ —Å—Ä–æ–∫ !</li>
              <li className={s.mainBody__listItem}>
                –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ª—É—á—à–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π!
              </li>
              <li className={s.mainBody__listItem}>Pixel Perfect</li>
              <li className={s.mainBody__listItem}>
                –°–µ–º–∞—Ç–∏—á–µ—Å–µ–∫–∏–µ —Ç–µ–≥–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è seo!
              </li>
              <li className={s.mainBody__listItem}>
                –í–∞–ª–∏–¥–Ω—ã–π –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥!
              </li>
            </ul>

            <StatsComponent />
          </div>
        </div>
      </div>
    </>
  )
}

const About = () => {
  return (
    <div className={s.about}>
      <div className='container small'>
        <div className={s.aboutBody}>
          <div className={s.aboutBody__title}>–ù–ï–ú–ù–û–ì–û –û–ë–û –ú–ù–ï</div>
          <div className={s.aboutBody__descr}>
            –ú–µ–Ω—è –∑–æ–≤—É—Ç –ö–∏—Ä–∏–ª–ª –ú–∞—Ö–Ω–µ–≤. <br /> –° 2019 –≥–æ–¥–∞ –∏–∑—É—á–∞—é Frontend
            —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. <br />
            –û–ø—ã—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–æ–ª–µ–µ —Ç—Ä–µ—Ö –ª–µ—Ç. üî•
            <br /> –í–µ—Ä—Å—Ç–∞—é –∞–¥–∞–ø–ø–∏—Ç–≤–æ, –∫—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω–æ, —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç) <br />{' '}
            –ü–æ–º–∏–º–æ –≤–µ—Ä—Å–∫—Ç–∏, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é SPA –Ω–∞ React —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º API. <br />{' '}
            –û—Ç–∫—Ä—ã—Ç –≤—Å–µ–º—É –Ω–æ–≤–æ–º—É! –í—Å–µ–≥–¥–∞ –æ–±—É—á–∞—é—Å—å, –∏ –¥–µ–ª–∞—é —ç—Ç–æ –±—ã—Å—Ç—Ä–æ !) <br /> –í
            —Ä–∞–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é –ª—É—á—à–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, <br /> —á—Ç–æ–±—ã –≤–∞–º –∏
            –≤–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –±—ã–ª–æ —É–¥–æ–±–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∞–π—Ç–æ–º.
          </div>
        </div>
      </div>
    </div>
  )
}

const Advantages = () => {
  // Reviews slider
  // const reviewsListState = useSelector((state: any) => state.reviews)
  // const reviewsItems = reviewsListState.map((item: any, index: number) => (
  //   <SwiperSlide key={index}>
  //     <div className={s.review}>
  //       <span className={s.reviewName}>{item.Name}</span>
  //       <span className={s.reviewContent}>‚Äú{item.Content}‚Äù</span>
  //     </div>
  //   </SwiperSlide>
  // ))

  return (
    <>
      <div className={s.advantages}>
        <div className='container small'>
          <div className={s.advantages__title}>–ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê</div>
          <div className={s.advantagesBody}>
            <div className={s.advantagesBody__item}>
              <div className={s.advantagesBody__itemTitle}>–ö–∞—á–µ—Å—Ç–≤–æ</div>
              <div className={s.advantagesBody__itemDescr}>
                –í–∞–ª–∏–¥–Ω–∞—è, –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞. –•–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥.
                –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π <br /> –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç
                –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã.
              </div>
              <div className={`${s.advantagesBody__itemDescr} ${s.additional}`}>
                –ê —Ç–∞–∫–∂–µ, –ø—Ä–æ–≤–µ—Ä—è—é —Ä–∞–±–æ—Ç—É –ø–µ—Ä–µ–¥ —Å–¥–∞—á–µ–π!
              </div>
            </div>
            <div className={s.advantagesBody__item}>
              <div className={s.advantagesBody__itemTitle}>–°–∫–æ—Ä–æ—Å—Ç—å</div>
              <div className={s.advantagesBody__itemDescr}>
                –î–µ–ª–∞—é –±—ã—Å—Ç—Ä–µ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. <br /> –õ–µ–Ω–¥–∏–Ω–≥
                –∑–∞ –¥–µ–Ω—å? - –≥–æ—Ç–æ–≤–æ! <br /> –ü–æ–º–æ–≥—É, –µ—Å–ª–∏ –≥–æ—Ä—è—Ç üî• —Å—Ä–æ–∫–∏) –ò –±–µ–∑
                –ø–æ—Ç–µ—Ä–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ!
              </div>
            </div>
            <div className={s.advantagesBody__item}>
              <div className={s.advantagesBody__itemTitle}>–°—Ä–æ–∫–∏</div>
              <div className={s.advantagesBody__itemDescr}>
                –ó–∞ —Å—á–µ—Ç –≤—ã—Å–æ–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –≤—Å–µ–≥–¥–∞ —É—Å–ø–µ–≤–∞—é –≤ —Å—Ä–æ–∫! <br /> –ù–µ
                –ø—Ä–æ–ø–∞–¥—É –ø–µ—Ä–µ–¥ —Å–¥–∞—á–µ–π –∏–ª–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã. <br />{' '}
                –í—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  )
}

const PreviewProjects = () => {
  const navigate = useNavigate()

  const toPage = (page: string) => {
    window.scrollTo({
      top: 0,
      left: 0,
      behavior: 'smooth',
    })
    return navigate(`${page}`)
  }

  const projectsListStateFiltered = useSelector((state: any) =>
    state.projects.filter((item: any) => item.IsBest)
  )
  const projectsListSlider = projectsListStateFiltered.map(
    (item: any, index: number) => (
      <SwiperSlide key={index}>
        <PortfolioItem
          isSlider
          name={item.Name}
          img={item.Img}
          link={item.Link}
          isBest={item.IsBest}
          type={item.Type}
        />
      </SwiperSlide>
    )
  )

  useEffect(() => {
    const buttons = document.getElementsByClassName('liquid-button')
    for (let buttonIndex = 0; buttonIndex < buttons.length; buttonIndex++) {
      const button: any = buttons[buttonIndex]
      button.liquidButton = new LiquidButton(button)
    }
  })

  return (
    <div className={s.preview}>
      <div className='container'>
        <div className={s.previewBody__title}>–ü–†–ò–ú–ï–†–´ –†–ê–ë–û–¢</div>
        <div className={s.previewBody}>
          <Swiper
            modules={[Autoplay, Navigation, Pagination]}
            spaceBetween={0}
            slidesPerView={1}
            autoplay={{
              delay: 4000,
              disableOnInteraction: false,
            }}
            navigation={{
              nextEl: '.swiper-button-next',
              prevEl: '.swiper-button-prev',
            }}
            loop
            pagination={{
              clickable: true,
              bulletClass: s.bullet,
              bulletActiveClass: s.bulletActive,
              modifierClass: 'bullet__list',
            }}
            className={`${s.previewBody__slider} ${s.slider}`}
          >
            <div className='swiper-button-prev cursorHover _navigation-prev'></div>
            {projectsListSlider}
            <div className='swiper-button-next cursorHover _navigation-next'></div>
          </Swiper>

          {/* <div className={`${s.previewBody__more} liquid-button`}>
            –ë–æ–ª—å—à–µ —Ä–∞–±–æ—Ç
          </div> */}

          <svg
            onClick={() => {
              toPage('portfolio')
            }}
            className={`${s.previewBody__more} liquid-button`}
            data-text='–ë–æ–ª—å—à–µ —Ä–∞–±–æ—Ç'
            data-force-factor='0.1'
            data-layer-1-viscosity='0.5'
            data-layer-2-viscosity='0.4'
            data-layer-1-mouse-force='400'
            data-layer-2-mouse-force='500'
            data-layer-1-force-limit='1'
            data-layer-2-force-limit='2'
            data-color1='#c8ff29'
            data-color2='#c5afff'
            data-color3='#20D8F9'
          ></svg>
        </div>
      </div>
    </div>
  )
}

const Reviews = () => {
  // Reviews slider
  const reviewsListState = useSelector((state: any) => state.reviews)
  const reviewsItems = reviewsListState.map((item: any, index: number) => (
    <SwiperSlide key={index}>
      <div className={s.review}>
        <span className={s.reviewName}>{item.Name}</span>
        <span className={s.reviewContent}>‚Äú{item.Content}‚Äù</span>
      </div>
    </SwiperSlide>
  ))

  return (
    <div className={s.reviews}>
      <div className='container'>
        <div className={s.reviews__title}>–û–¢–ó–´–í–´</div>
        <div className={s.reviews__subtitle}>
          –û–±–æ –º–Ω–µ –≥–æ–≤–æ—Ä—è—Ç –æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤!
        </div>
        <div className={s.reviewsSlider}>
          <Swiper
            modules={[Autoplay, Navigation, Pagination]}
            className={s.slider}
            spaceBetween={0}
            slidesPerView={1}
            autoplay={{
              delay: 5000,
              disableOnInteraction: false,
            }}
            autoHeight
            navigation={{
              nextEl: '.swiper-button-next',
              prevEl: '.swiper-button-prev',
            }}
            grabCursor
            loop
            pagination={{
              clickable: true,
              bulletClass: `${s.bullet} ${s.bulletLight}`,
              bulletActiveClass: s.bulletActive,
              modifierClass: 'bullet__list-light',
            }}
          >
            <div className='swiper-button-prev cursorHover _navigation-prev'></div>
            {reviewsItems}
            <div className='swiper-button-next cursorHover _navigation-next'></div>
          </Swiper>
        </div>
      </div>
    </div>
  )
}

const MyStack = () => {
  const ListItem = ({ value }: any) => {
    return <li className={s.stackBody__item}>{value}</li>
  }

  return (
    <div className={s.stack}>
      <div className='container small'>
        <div className={s.stack__title}>–ú–û–ô –°–¢–ï–ö</div>
        <ul className={s.stackBody}>
          <ListItem value='React' />
          <ListItem value='TypeScript' />
          <ListItem value='Rest API' />
          <ListItem value='Gulp' />
          <ListItem value='Redux' />
          <ListItem value='HTML/CSS' />
          <ListItem value='GIT' />
          <ListItem value='JavaScript' />
          <ListItem value='sass/SCSS' />
          <ListItem value='–ë–≠–ú' />
          <ListItem value='Figma, Zeplin, PSD' />
        </ul>
      </div>
    </div>
  )
}

const AboutMe = () => {
  return (
    <>
      <div className={`${s.advantages} ${s.about}`}>
        <div className='container small'>
          <div className={s.advantagesBody}>
            <div className={s.advantagesBody__col}>
              <div className={s.advantagesBody__colTitle}>
                –ù–µ–º–Ω–æ–≥–æ <br />
                –û–±–æ –º–Ω–µ üòé
              </div>
              <div className={s.advantagesBody__colText}>
                <p>
                  –° 2020 –≥–æ–¥–∞ –∏–∑—É—á–∞—é Frontend —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. <br />
                  –û–ø—ã—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–æ–ª–µ–µ –¥–≤—É—Ö –ª–µ—Ç. üî•
                </p>
                <p>–í–µ—Ä—Å—Ç–∞—é –∞–¥–∞–ø–ø–∏—Ç–≤–æ, –∫—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω–æ, —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç)</p>
                <p>
                  –ü–æ–º–∏–º–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∫—Ç–∏, —É–º–µ—é –≤–µ—Ä—Å–∞—Ç—å –Ω–∞ React, <br />–∞
                  —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å API.
                </p>
                <p>
                  –û—Ç–∫—Ä—ã—Ç –≤—Å–µ–º—É –Ω–æ–≤–æ–º—É! –í—Å–µ–≥–¥–∞ –æ–±—É—á–∞—é—Å—å, –∏ –¥–µ–ª–∞—é —ç—Ç–æ –±—ã—Å—Ç—Ä–æ !)
                </p>
                <p>
                  –í —Ä–∞–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é –ª—É—á—à–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —á—Ç–æ–±—ã –≤–∞–º –∏
                  –≤–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –±—ã–ª–æ —É–¥–æ–±–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∞–π—Ç–æ–º.
                </p>
              </div>
            </div>
            <div className={s.advantagesBody__col}>
              <div className={s.advantagesBody__colTitle}>–ú–æ–π —Å—Ç–µ–∫:</div>
              <ul className={s.advantagesBody__colStack}>
                <li>React</li>
                <li>Redux</li>
                <li>JavaScript</li>
                <li>TypeScript</li>
                <li>HTML/CSS</li>
                <li>sass/SCSS</li>
                <li>axios</li>
                <li>Rest API</li>
                <li>GIT</li>
                <li>Gulp</li>
                <li>–ë–≠–ú</li>
                <li>Figma, Zeplin, Photoshop</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </>
  )
}

export default Main
